/**
 * BlogSphere - Editor JavaScript
 * Enhances the blog post editor experience
 */
// Initialize CKEditor

let editor;

CKEDITOR.ClassicEditor.create(document.getElementById("content"), {
    toolbar: {
        items: [
            'heading', '|',
            'bold', 'italic', 'strikethrough', 'underline', 'code', '|',
            'bulletedList', 'numberedList', 'todoList', '|',
            'outdent', 'indent', '|',
            'undo', 'redo', '|',
            'link', 'insertImage', 'blockQuote', 'insertTable', 'codeBlock', 'htmlEmbed', '|',
            'fontfamily', 'fontsize', 'fontColor', 'fontBackgroundColor', '|',
            'alignment', '|',
            'specialCharacters'
        ],
        shouldNotGroupWhenFull: true
    },
    image: {
        toolbar: [
            'imageTextAlternative', 'imageStyle:inline',
            'imageStyle:block', 'imageStyle:side'
        ]
    },
    list: {
        properties: {
            styles: true,
            startIndex: true,
            reversed: true
        }
    },
    heading: {
        options: [
            { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
            { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
            { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
            { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
            { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' }
        ]
    },
    htmlEmbed: {
        showPreviews: true
    },
    placeholder: 'Write your blog post here...',
    fontFamily: {
        options: [
            'default',
            'Arial, Helvetica, sans-serif',
            'Courier New, Courier, monospace',
            'Georgia, serif',
            'Lucida Sans Unicode, Lucida Grande, sans-serif',
            'Tahoma, Geneva, sans-serif',
            'Times New Roman, Times, serif',
            'Trebuchet MS, Helvetica, sans-serif',
            'Verdana, Geneva, sans-serif'
        ],
        supportAllValues: true
    },
    fontSize: {
        options: [ 10, 12, 14, 16, 18, 20, 22 ],
        supportAllValues: true
    },
    height: 500,
    removePlugins: [
        'CKBox', 'CKFinder', 'EasyImage', 'RealTimeCollaborativeComments',
        'RealTimeCollaborativeTrackChanges', 'RealTimeCollaborativeRevisionHistory',
        'PresenceList', 'Comments', 'TrackChanges', 'TrackChangesData',
        'RevisionHistory', 'Pagination', 'WProofreader', 'MathType', 'SlashCommand',
        'Template', 'DocumentOutline', 'FormatPainter', 'TableOfContents',  'AIAssistant', 'MultiLevelList', 'PasteFromOfficeEnhanced',
        'CaseChange'
    ]
}).then(newEditor => {
    editor = newEditor;
}).catch(error => {
    console.error(error);
});

document.addEventListener('DOMContentLoaded', function() {
    // Auto-generate slug from title
    const titleInput = document.getElementById('title');
    const slugInput = document.getElementById('slug');

    if (titleInput && slugInput) {
        titleInput.addEventListener('input', function() {
            if (!slugInput.value || slugInput.dataset.autoGenerated === 'true') {
                // Generate slug from title
                const slug = this.value
                    .toLowerCase()
                    .replace(/[^\w\s-]/g, '')  // Remove special chars except spaces and hyphens
                    .replace(/\s+/g, '-')      // Replace spaces with hyphens
                    .replace(/-+/g, '-')       // Remove consecutive hyphens
                    .trim();

                slugInput.value = slug;
                slugInput.dataset.autoGenerated = 'true';
            }
        });

        // When user manually edits slug, stop auto-generation
        slugInput.addEventListener('input', function() {
            this.dataset.autoGenerated = 'false';
        });
    }

    // Preview button functionality
    const previewBtn = document.getElementById('previewBtn');
    if (previewBtn) {
        previewBtn.addEventListener('click', function() {
            const title = document.getElementById('title').value;
            // Check if CKEditor is initialized or using regular textarea
            let content;
            if (window.editor) {
                content = editor.getData();
            } else {
                content = document.getElementById('content').value;
            }

            // Update preview modal content
            document.getElementById('previewTitle').textContent = title;
            document.getElementById('previewContent').innerHTML = content;

            // Show preview modal
            const previewModal = new bootstrap.Modal(document.getElementById('previewModal'));
            previewModal.show();
        });
    }

    // Save as draft button
    const saveAsDraftBtn = document.getElementById('saveAsDraft');
    if (saveAsDraftBtn) {
        saveAsDraftBtn.addEventListener('click', function() {
            document.getElementById('statusInput').value = 'DRAFT';
            document.getElementById('blogForm').submit();
        });
    }

    // Publish button
    const publishBtn = document.getElementById('publishBtn');
    if (publishBtn) {
        publishBtn.addEventListener('click', function() {
            // Ensure CKEditor content is synchronized
            if (window.editor) {
                document.getElementById('content').value = editor.getData();
            }

            // Set status to PUBLISHED
            document.getElementById('statusInput').value = 'PUBLISHED';

            // Submit the form
            document.getElementById('blogForm').submit();
        });
    }

    // Handle featured image upload
    const featuredImageInput = document.getElementById('featuredImage');
    if (featuredImageInput) {
        featuredImageInput.addEventListener('change', function() {
            const file = this.files[0];
            if (file) {
                // Preview image
                const reader = new FileReader();
                reader.onload = function(e) {
                    const preview = document.getElementById('imagePreview');
                    if (preview) {
                        preview.src = e.target.result;
                        preview.style.display = 'block';
                    }

                    // Set hidden input for form submission
                    const imageUrlInput = document.getElementById('imageUrlInput');
                    if (imageUrlInput) {
                        imageUrlInput.value = e.target.result;
                    }
                };
                reader.readAsDataURL(file);
            }
        });
    }

    // Tags input enhancement
    const tagsInput = document.getElementById('tags');
    if (tagsInput) {
        // Convert comma-separated input into visual tags
        tagsInput.addEventListener('keydown', function(e) {
            if (e.key === 'Enter' || e.key === ',') {
                e.preventDefault();

                const tagText = this.value.trim();
                if (tagText) {
                    addTag(tagText);
                    this.value = '';
                }
            }
        });

        // Initialize existing tags from input value
        if (tagsInput.value) {
            const tags = tagsInput.value.split(',');
            tags.forEach(tag => {
                if (tag.trim()) {
                    addTag(tag.trim());
                }
            });
            tagsInput.value = '';
        }

        function addTag(text) {
            const tagsContainer = document.getElementById('tagsContainer');
            if (!tagsContainer) return;

            const tag = document.createElement('span');
            tag.className = 'badge bg-light text-dark me-2 mb-2';
            tag.innerHTML = text + ' <i class="fas fa-times ms-1" style="cursor: pointer;"></i>';

            const closeIcon = tag.querySelector('i');
            closeIcon.addEventListener('click', function() {
                tag.remove();
                updateHiddenTagsInput();
            });

            tagsContainer.appendChild(tag);
            updateHiddenTagsInput();
        }

        function updateHiddenTagsInput() {
            const tagsContainer = document.getElementById('tagsContainer');
            const hiddenTagsInput = document.getElementById('tagsHidden');

            if (!tagsContainer || !hiddenTagsInput) return;

            const tags = [];
            tagsContainer.querySelectorAll('.badge').forEach(tag => {
                console.log(" tag ",tag);
                tags.push(tag.textContent.trim().replace(' Ã—', ''));
            });

            console.log("tags ",tags);

            hiddenTagsInput.value = tags.join(',');
        }
    }

    // Warn before leaving with unsaved changes
    const blogForm = document.getElementById('blogForm') || document.getElementById('editForm');
    if (blogForm) {
        let originalFormData = new FormData(blogForm);

        // Store the beforeunload handler in a variable so we can remove it
        const beforeUnloadHandler = function(e) {
            const currentFormData = new FormData(blogForm);
            let isDirty = false;

            // Compare current form data with original
            for (let [key, value] of currentFormData.entries()) {
                if (originalFormData.get(key) !== value) {
                    isDirty = true;
                    break;
                }
            }

            if (isDirty) {
                e.preventDefault();
                e.returnValue = 'You have unsaved changes. Are you sure you want to leave?';
                return e.returnValue;
            }
        };

        window.addEventListener('beforeunload', beforeUnloadHandler);

// Remove warning when form is submitted
        blogForm.addEventListener('submit', function() {
            console.log(new FormData(blogForm)," newFormData")
            window.removeEventListener('beforeunload', beforeUnloadHandler);
        });

    }

    // Word count display
    const contentArea = document.getElementById('content');
    const wordCountDisplay = document.getElementById('wordCount');

    if (contentArea && wordCountDisplay) {
        function updateWordCount() {
            let text;

            // Get text from CKEditor if available
            if (window.editor) {
                // Strip HTML tags for word counting
                const editorData = editor.getData();
                const div = document.createElement('div');
                div.innerHTML = editorData;
                text = div.textContent || div.innerText || '';
            } else {
                text = contentArea.value;
            }

            // Count words
            const words = text.trim().split(/\s+/).filter(Boolean).length;
            wordCountDisplay.textContent = words;
        }

        // Update on input
        contentArea.addEventListener('input', updateWordCount);

        // Initial count
        updateWordCount();

        // If using CKEditor, hook into its change event
        if (window.editor) {
            editor.model.document.on('change:data', updateWordCount);
        }
    }
});
